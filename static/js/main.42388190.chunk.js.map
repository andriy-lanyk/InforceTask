{"version":3,"sources":["Redux/Product/product-actions.js","Redux/Product/product-reduser.js","Redux/store.js","Redux/Product/product-selectors.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","Redux/Product/product-operations.js","Components/ModalWindow/ModalWindow.js","Components/PropuctItem/ProductItem.js","Components/ProductList/ProductList.js","Components/AddProductForm/AddProductForm.styles.js","Components/AddProductForm/AddProductForm.js","Views/ProductsListView/ProductsListView.js","Components/ChangeProduct/ChangeProduct.js","Views/ProductView/ProductView.js","App/App.js","index.js","Views/ProductView/ProductView.module.css","Components/ModalWindow/ModalWindow.module.css","Components/ChangeProduct/ChangeProduct.module.css","Components/PropuctItem/ProductItem.module.css"],"names":["addProduct","createAction","id","imageUrl","name","count","size","weight","comments","payload","getProduct","deleteProduct","filterProduct","getProductId","patchProduct","fetchProductRequest","fetchProductSuccess","fetchProductError","productsItems","createReducer","items","product","isLoading","error","productActions","state","map","elem","filter","_","combineReducers","store","configureStore","reducer","products","productReduser","getAllProducts","getFilter","getFilteredProducts","createSelector","normalizedFilter","toLowerCase","includes","Message","styled","p","Filter","useSelector","dispatch","useDispatch","length","TextField","margin","label","type","value","onChange","e","target","axios","defaults","baseURL","modalRoot","document","querySelector","ModalWindow","closeModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","className","styles","overlay","onClick","currentTarget","mainContainer","btnContainer","Button","variant","color","a","productId","toString","delete","productOperations","ProductItem","useState","modal","setModal","location","useLocation","Card","sx","maxWidth","link","to","pathname","from","CardActionArea","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","divContainer","CardActions","List","ul","ProductList","visibleProducts","get","data","Form","form","FormContainer","div","AddProductForm","openForm","setOpenForm","setName","setImageUrl","setCount","width","setWidth","setHeight","setWeight","handleChange","reset","onSubmit","preventDefault","post","toast","success","theme","autoClose","fullWidth","required","drawerWidth","Main","shouldForwardProp","prop","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","display","alignItems","mixins","toolbar","justifyContent","ProductsListView","openModal","useTheme","React","setOpen","Box","CssBaseline","position","Toolbar","IconButton","edge","mr","noWrap","Drawer","flexShrink","boxSizing","anchor","direction","Divider","ChangeProduct","formContainer","patch","console","log","ProductView","history","useHistory","container","push","productContainer","productImage","src","productDescription","comment","i","App","path","exact","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42388190.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst addProduct = createAction(\n  \"product/add\",\n  ({ id, imageUrl, name, count, size, weight, comments = [] }) => {\n    return {\n      payload: {\n        id,\n        imageUrl,\n        name,\n        count,\n        size,\n        weight,\n        comments,\n      },\n    };\n  }\n);\n\nconst getProduct = createAction(\"product/get\");\nconst deleteProduct = createAction(\"product/delete\");\nconst filterProduct = createAction(\"product/filter\");\nconst getProductId = createAction(\"product/getId\");\nconst patchProduct = createAction(\n  \"product/patch\",\n  ({ id, imageUrl, name, count, size, weight, comments = [] }) => {\n    return {\n      payload: {\n        id,\n        imageUrl,\n        name,\n        count,\n        size,\n        weight,\n        comments,\n      },\n    };\n  }\n);\n\nconst fetchProductRequest = createAction(\"product/fetchRequest\");\nconst fetchProductSuccess = createAction(\"product/fetchSuccess\");\nconst fetchProductError = createAction(\"product/fetchError\");\n\nexport {\n  addProduct,\n  getProduct,\n  getProductId,\n  deleteProduct,\n  filterProduct,\n  patchProduct,\n  fetchProductRequest,\n  fetchProductSuccess,\n  fetchProductError,\n};\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport * as productActions from \"./product-actions\";\n\nconst InitialState = {\n  items: [],\n  product: [],\n  isLoading: false,\n  error: \"\",\n};\n\nconst productsItems = createReducer(InitialState, {\n  [productActions.getProduct]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [productActions.getProductId]: (state, { payload }) => ({\n    ...state,\n    product: payload,\n  }),\n  [productActions.patchProduct]: (state, { payload }) => ({\n    ...state,\n    items: state.items.map((elem) => {\n      if (elem.id === payload.id) {\n        return payload;\n      } else {\n        return elem;\n      }\n    }),\n    product: payload,\n  }),\n  [productActions.addProduct]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n  [productActions.deleteProduct]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter((elem) => elem.id !== payload),\n  }),\n  [productActions.fetchProductRequest]: (state) => ({\n    ...state,\n    isLoading: true,\n  }),\n  [productActions.fetchProductSuccess]: (state) => ({\n    ...state,\n    isLoading: false,\n  }),\n  [productActions.fetchProductError]: (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }),\n});\n\nconst filter = createReducer(\"\", {\n  [productActions.filterProduct]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  productsItems,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport productReduser from \"./Product/product-reduser\";\n\nconst store = configureStore({\n  reducer: {\n    products: productReduser,\n  },\n});\n\nexport { store };\n","import { createSelector } from \"reselect\";\n\nconst getAllProducts = (state) => state.products.productsItems.items;\nconst getFilter = (state) => state.products.filter;\nconst getLoading = (state) => state.products.productsItems.isLoading;\nconst getProduct = (state) => state.products.productsItems.product;\n\nconst getFilteredProducts = createSelector(\n  [getAllProducts, getFilter],\n  (products, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return products.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport {\n  getAllProducts,\n  getFilter,\n  getFilteredProducts,\n  getLoading,\n  getProduct,\n};\n","import styled from \"@emotion/styled\";\n\nconst Message = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport { Message };\n","import { useSelector, useDispatch } from \"react-redux\";\nimport * as productActions from \"../../Redux/Product/product-actions\";\nimport {\n  getAllProducts,\n  getFilter,\n} from \"../../Redux/Product/product-selectors\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport { Message } from \"./Filter.styles\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const products = useSelector(getAllProducts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(productActions.filterProduct(e.target.value));\n  };\n\n  return products.length !== 0 ? (\n    <TextField\n      margin=\"normal\"\n      size=\"small\"\n      label=\"Find product by name\"\n      type=\"text\"\n      name=\"Find product\"\n      value={filter}\n      onChange={handleChange}\n    />\n  ) : (\n    <Message>\n      Our shop doesn`t have any products in the current time. Please, visit us\n      later\n    </Message>\n  );\n};\n\nexport default Filter;\n","import axios from \"axios\";\nimport * as productActions from \"./product-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3030\";\n\nexport const fetchGetProduct = () => async (dispatch) => {\n  dispatch(productActions.fetchProductRequest());\n\n  try {\n    const { data } = await axios.get(\"/products\");\n    dispatch(productActions.getProduct(data));\n    dispatch(productActions.fetchProductSuccess());\n  } catch (error) {\n    dispatch(productActions.fetchProductError(error));\n  }\n};\n\nexport const fetchGetProductId = (id) => async (dispatch) => {\n  const productId = id.toString();\n  dispatch(productActions.fetchProductRequest());\n\n  try {\n    const { data } = await axios.get(`/products/${productId}`);\n    dispatch(productActions.getProductId(data));\n    dispatch(productActions.fetchProductSuccess());\n  } catch (error) {\n    dispatch(productActions.fetchProductError(error));\n  }\n};\n\nexport const fetchPatchProductId = (product, id) => async (dispatch) => {\n  const productId = id.toString();\n  dispatch(productActions.fetchProductRequest());\n\n  try {\n    const { data } = await axios.patch(`/products/${productId}`, product);\n    console.log(\"data: \", data);\n    dispatch(productActions.patchProduct(data));\n    dispatch(productActions.fetchProductSuccess());\n  } catch (error) {\n    dispatch(productActions.fetchProductError(error));\n  }\n};\n\nexport const fetchPostProduct = (product) => async (dispatch) => {\n  dispatch(productActions.fetchProductRequest());\n\n  try {\n    const { data } = await axios.post(\"/products\", product);\n    dispatch(productActions.addProduct(data));\n    dispatch(productActions.fetchProductSuccess());\n  } catch (error) {\n    dispatch(productActions.fetchProductError(error));\n  }\n};\n\nexport const fetchDeleteProduct = (id) => async (dispatch) => {\n  const productId = id.toString();\n  dispatch(productActions.fetchProductRequest());\n\n  try {\n    await axios.delete(`/products/${productId}`);\n    dispatch(productActions.deleteProduct(id));\n    dispatch(productActions.fetchProductSuccess());\n  } catch (error) {\n    dispatch(productActions.fetchProductError(error));\n  }\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as productOperations from \"../../Redux/Product/product-operations\";\nimport { Button } from \"@material-ui/core\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./ModalWindow.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nfunction ModalWindow({ closeModal, name, id }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const dispatch = useDispatch();\n\n  function handleKeyDown(e) {\n    if (e.code === \"Escape\") {\n      closeModal();\n    }\n  }\n\n  function handleClickOnBackdrop(e) {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  }\n\n  return createPortal(\n    <div className={styles.overlay} onClick={handleClickOnBackdrop}>\n      <div className={styles.mainContainer}>\n        <h2>Please, confirm delete product {name}</h2>\n        <div className={styles.btnContainer}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"error\"\n            onClick={() => dispatch(productOperations.fetchDeleteProduct(id))}\n          >\n            Yes, delete product\n          </Button>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={closeModal}\n          >\n            No, go back\n          </Button>\n        </div>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport default ModalWindow;\n","import { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, CardActionArea, CardActions } from \"@material-ui/core\";\n\nimport ModalWindow from \"../ModalWindow\";\nimport styles from \"./ProductItem.module.css\";\n\n// import styled from '@emotion/styled';\n\n// const DivContainer = styled.div`\n//   display: flex;\n//   justify-content: center;\n// `;\n\nexport default function ProductItem({\n  id,\n  imageUrl,\n  name,\n  count,\n  size,\n  weight,\n  comments,\n}) {\n  const [modal, setModal] = useState(false);\n\n  const location = useLocation();\n\n  function confirmDeleteCard() {\n    setModal(true);\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n  return (\n    <>\n      <Card sx={{ maxWidth: 345 }} key={id}>\n        <Link\n          className={styles.link}\n          to={{\n            pathname: `/InforceTask/${id}`,\n            state: { from: location, productId: id },\n          }}\n        >\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={imageUrl}\n              alt={name}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {name}\n              </Typography>\n              <Typography\n                component={\"span\"}\n                variant=\"body2\"\n                color=\"text.secondary\"\n              >\n                <div className={styles.divContainer}>\n                  <span>Count: {count}</span>\n                  {/* <span>Weight: {weight}</span>\n                  <span>Width: {size.width}</span>\n                  <span>Height: {size.height}</span> */}\n                </div>\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Link>\n\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={confirmDeleteCard}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n      {modal && <ModalWindow closeModal={toggleModal} name={name} id={id} />}\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as productOperations from \"../../Redux/Product/product-operations\";\nimport {\n  getAllProducts,\n  getFilteredProducts,\n} from \"../../Redux/Product/product-selectors\";\nimport ProductItem from \"../PropuctItem\";\n\nimport styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 20px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst ProductList = () => {\n  const products = useSelector(getAllProducts);\n  const visibleProducts = useSelector(getFilteredProducts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(productOperations.fetchGetProduct());\n  }, [dispatch]);\n\n  return (\n    products.length > 0 && (\n      <List>\n        {visibleProducts.map(\n          ({ id, imageUrl, name, count, size, weight, comments }) => (\n            <ProductItem\n              key={id}\n              id={id}\n              imageUrl={imageUrl}\n              name={name}\n              count={count}\n              size={size}\n              weight={weight}\n              comments={comments}\n            />\n          )\n        )}\n      </List>\n    )\n  );\n};\n\nexport default ProductList;\n","import styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 20px;\n  border: 3px solid #87cefa;\n  margin-top: 15px;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport { Form, FormContainer };\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as productOperations from \"../../Redux/Product/product-operations\";\n\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Form, FormContainer } from \"./AddProductForm.styles\";\n\nconst AddProductForm = () => {\n  const [openForm, setOpenForm] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [width, setWidth] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"imageUrl\":\n        setImageUrl(value);\n        break;\n      case \"count\":\n        setCount(value);\n        break;\n      case \"width\":\n        setWidth(value);\n        break;\n      case \"height\":\n        setHeight(value);\n        break;\n      case \"weight\":\n        setWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const size = { width, height };\n    const comments = [];\n\n    dispatch(\n      productOperations.fetchPostProduct({\n        name,\n        imageUrl,\n        count,\n        size,\n        weight,\n        comments,\n      })\n    );\n    toast.success(`${name} was added to shop`, {\n      theme: \"colored\",\n      autoClose: 2500,\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setImageUrl(\"\");\n    setCount(\"\");\n    setWidth(\"\");\n    setHeight(\"\");\n    setWeight(\"\");\n  };\n\n  function toggleForm() {\n    setOpenForm(!openForm);\n  }\n\n  return (\n    <FormContainer>\n      <Button onClick={toggleForm} variant=\"contained\" size=\"medium\">\n        {openForm ? \"Close add product form\" : \"Open add product form\"}\n      </Button>\n      {openForm && (\n        <Form onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Image URL\"\n            type=\"text\"\n            name=\"imageUrl\"\n            value={imageUrl}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Count\"\n            type=\"number\"\n            name=\"count\"\n            value={count}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Width of a product\"\n            type=\"number\"\n            name=\"width\"\n            value={width}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Height of a product\"\n            type=\"number\"\n            name=\"height\"\n            value={height}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Weight\"\n            type=\"number\"\n            name=\"weight\"\n            value={weight}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <Button type=\"submit\" variant=\"contained\">\n            Add product\n          </Button>\n        </Form>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default AddProductForm;\n","import * as React from \"react\";\nimport { styled, useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n// import List from '@material-ui/core/List';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemText from '@material-ui/core/ListItemText';\n\nimport Filter from \"../../Components/Filter\";\nimport ProductList from \"../../Components/ProductList\";\nimport AddProductForm from \"../../Components/AddProductForm\";\n\nconst drawerWidth = 260;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  transition: theme.transitions.create([\"margin\", \"width\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n\nexport default function ProductsListView({ openModal }) {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: \"none\" }) }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Test shop application\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          Filter menu\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </DrawerHeader>\n        <Divider />\n        <Filter />\n      </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n        <ProductList openModal={openModal} />\n        <AddProductForm />\n      </Main>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as productOperations from \"../../Redux/Product/product-operations\";\nimport { createPortal } from \"react-dom\";\nimport { getProduct } from \"../../Redux/Product/product-selectors\";\n\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"./ChangeProduct.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nfunction ChangeProduct({ closeModal, id }) {\n  const product = useSelector(getProduct);\n  const [name, setName] = useState(product.name);\n  const [imageUrl, setImageUrl] = useState(product.imageUrl);\n  const [count, setCount] = useState(product.count);\n  const [width, setWidth] = useState(product.size.width);\n  const [height, setHeight] = useState(product.size.height);\n  const [weight, setWeight] = useState(product.weight);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const dispatch = useDispatch();\n\n  function handleKeyDown(e) {\n    if (e.code === \"Escape\") {\n      closeModal();\n    }\n  }\n\n  function handleClickOnBackdrop(e) {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"imageUrl\":\n        setImageUrl(value);\n        break;\n      case \"count\":\n        setCount(value);\n        break;\n      case \"width\":\n        setWidth(value);\n        break;\n      case \"height\":\n        setHeight(value);\n        break;\n      case \"weight\":\n        setWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const size = { width, height };\n    const comments = [];\n\n    dispatch(\n      productOperations.fetchPatchProductId(\n        {\n          name,\n          imageUrl,\n          count,\n          size,\n          weight,\n          comments,\n        },\n        id\n      )\n    );\n    toast.success(`Product ${name} was changed`, {\n      theme: \"colored\",\n      autoClose: 2500,\n    });\n    closeModal();\n  };\n\n  return createPortal(\n    <div className={styles.overlay} onClick={handleClickOnBackdrop}>\n      <div className={styles.mainContainer}>\n        <form className={styles.formContainer} onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Image URL\"\n            type=\"text\"\n            name=\"imageUrl\"\n            value={imageUrl}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Count\"\n            type=\"number\"\n            name=\"count\"\n            value={count}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Width of a product\"\n            type=\"number\"\n            name=\"width\"\n            value={width}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Height of a product\"\n            type=\"number\"\n            name=\"height\"\n            value={height}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Weight\"\n            type=\"number\"\n            name=\"weight\"\n            value={weight}\n            required\n            onChange={handleChange}\n            size=\"small\"\n          />\n          <Button type=\"submit\" variant=\"contained\">\n            Add product\n          </Button>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport default ChangeProduct;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport * as productOperations from \"../../Redux/Product/product-operations\";\nimport { getProduct } from \"../../Redux/Product/product-selectors\";\nimport { Button } from \"@material-ui/core\";\nimport ChangeProduct from \"../../Components/ChangeProduct\";\nimport styles from \"./ProductView.module.css\";\n\nfunction ProductView() {\n  const [modal, setModal] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  const productId = location?.state?.productId ?? 1;\n\n  const product = useSelector(getProduct);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(productOperations.fetchGetProductId(productId));\n  }, [dispatch, productId]);\n\n  function openModal() {\n    setModal(true);\n  }\n\n  function toggleModal() {\n    setModal(!modal);\n  }\n\n  function goToBack() {\n    history.push(location?.state?.from ?? \"/InforceTask\");\n  }\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          aria-label=\"Go back\"\n          onClick={goToBack}\n        >\n          Go to product list\n        </Button>\n\n        <>\n          {product && (\n            <>\n              <div className={styles.productContainer}>\n                <div className={styles.productImage}>\n                  <img src={product.imageUrl} alt={product.name} />\n                </div>\n                <div className={styles.productDescription}>\n                  <h2>{product.name}</h2>\n                  <p>Count: {product.count}</p>\n                  <p>Weight: {product.weight}</p>\n                  <h3>Product size</h3>\n                  <p>Width: {product.size?.width}</p>\n                  <p>Height: {product.size?.height}</p>\n                  <h3>Comments</h3>\n                  <ul>\n                    {product?.comments?.map((comment, i) => (\n                      <li key={i}>{comment}</li>\n                    ))}\n                  </ul>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    color=\"secondary\"\n                    aria-label=\"Open edit product window\"\n                    onClick={openModal}\n                  >\n                    Edit product\n                  </Button>\n                </div>\n              </div>\n            </>\n          )}\n        </>\n      </div>\n      {modal && <ChangeProduct closeModal={toggleModal} id={productId} />}\n    </>\n  );\n}\n\nexport default ProductView;\n","import { Switch } from \"react-router-dom\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ProductsListView from \"../Views/ProductsListView\";\nimport ProductView from \"../Views/ProductView\";\nimport \"./App.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/InforceTask\" exact>\n          <ProductsListView />\n        </Route>\n        <Route path=\"/InforceTask/:productid\">\n          <ProductView />\n        </Route>\n        <Redirect to=\"/InforceTask\" exact />\n      </Switch>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productContainer\":\"ProductView_productContainer__1xOED\",\"productImage\":\"ProductView_productImage__3np-C\",\"productDescription\":\"ProductView_productDescription__3IZXm\",\"container\":\"ProductView_container__BwW9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ModalWindow_overlay__1fKP9\",\"mainContainer\":\"ModalWindow_mainContainer__3aSRs\",\"btnContainer\":\"ModalWindow_btnContainer__1Pe1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"ChangeProduct_overlay__3B26z\",\"mainContainer\":\"ChangeProduct_mainContainer__qPH_p\",\"formContainer\":\"ChangeProduct_formContainer__2IEAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ProductItem_link__2xiBZ\",\"divContainer\":\"ProductItem_divContainer__KdvO5\"};"],"sourceRoot":""}